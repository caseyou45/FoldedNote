{"version":3,"sources":["reducers/noteReducer.js","Components/Note/DeleteMessage.js","Components/Settings/EnablePassword.js","Components/Settings/DisablePassword.js","Components/Settings/ChangePassword.js","Components/Settings/SettingsModal.js","Styling.js","Components/Note/Note.js","Components/PasswordEntry/PasswordEntry.js","Components/Landing.js","App.js","store.js","index.js"],"names":["setStateNote","note","dispatch","a","type","data","noteReducer","state","action","DeleteMessage","className","onClick","window","location","href","EnablePassword","setNoteProtected","setShowSettingsModal","useState","password","setPassword","passwordCheck","setPasswordCheck","message","setMessage","length","match","passwordSt","setpasswordSt","useDispatch","useSelector","enablePassword","axios","post","returnedNote","setTimeout","console","log","handleSecureClick","e","preventDefault","Object","values","every","Boolean","useEffect","pwd","prevState","name","value","onChange","target","style","color","DisablePassword","disablePassword","identifier","response","error","handleSubmit","ChangePassword","newPassword","setNewPassword","newPasswordCheck","setNewPasswordCheck","currentPassword","setCurrentPassword","changePassword","updatedNote","SettingsModal","showSettingsModal","showChange","setShowChange","noteProtected","protected","class","display","offClick","backgroundColor","INLINE_STYLES","icon","BLOCK_TYPES","label","Note","status","setStatus","saving","setSaving","time","setTime","showButtons","setShowButtons","confirmDelete","setConfirmDelete","deleteSuccess","setDeleteSucess","EditorState","createEmpty","editorState","setEditorState","editorRef","useRef","BlockButtons","onMouseDown","event","nextState","RichUtils","toggleBlockType","handleBlockButtonCommand","StyleButtons","styleSelected","getCurrentInlineStyle","has","toggleInlineStyle","handleSyleButtonCommand","content","convertFromRaw","JSON","parse","createWithContent","current","focus","timer","setInterval","prevTime","clearInterval","triggerSave","saveNote","contentState","getCurrentContent","convertToRaw","rawDraftContentState","stringify","deleteNote","_id","DeleteConfirmComponent","disabled","buttonTypes","map","onKeyDown","ref","handleKeyCommand","command","newState","PasswordEntry","setNeedsAuth","useLocation","input","pathname","split","pop","result","Landing","needsAuth","load","setLoad","history","useHistory","makeIdentifier","characters","charactersLength","i","push","charAt","Math","floor","random","join","fetchNote","get","loadExisitngNote","makeNewNote","randomIdentifier","checkURLForUserInput","App","path","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71b0dfa1.chunk.js","sourcesContent":["// const initialState = {\r\n//   user: \"\",\r\n// };\r\n\r\n// const userReducer = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case \"SET_USER\":\r\n//       // return action.data;\r\n//       return { ...state, user: action.data };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const setStateUser = (user) => {\r\n//   return async (dispatch) => {\r\n//     dispatch({\r\n//       type: \"SET_USER\",\r\n//       data: user,\r\n//     });\r\n//   };\r\n// };\r\n\r\n// export default userReducer;\r\n\r\nconst noteReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"SET_NOTE\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setStateNote = (note) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: \"SET_NOTE\",\r\n      data: note,\r\n    });\r\n  };\r\n};\r\n\r\nexport default noteReducer;\r\n","import React from \"react\";\r\n\r\nconst DeleteMessage = () => {\r\n  // Note deleted message with option for creating new Note\r\n\r\n  const handleClick = () => {\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"delete-message\">\r\n      <h4>Note successfully deleted</h4>\r\n      <button onClick={handleClick}>Make New Note</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteMessage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStateNote } from \"../../reducers/noteReducer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst EnablePassword = ({ setNoteProtected, setShowSettingsModal }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const [passwordSt, setpasswordSt] = useState({\r\n    length: false,\r\n    match: false,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const note = useSelector((state) => state.note);\r\n\r\n  // Creates password, shows message and triggers modal close.\r\n\r\n  const enablePassword = async (password) => {\r\n    note.password = password;\r\n    try {\r\n      let returnedNote = await axios.post(\"/api/note/password/enable\", note);\r\n      if (returnedNote) {\r\n        setMessage(\"Password Set\");\r\n        setPassword(\"\");\r\n        setPasswordCheck(\"\");\r\n        dispatch(setStateNote(returnedNote.data));\r\n        setTimeout(() => {\r\n          setShowSettingsModal(false);\r\n          setNoteProtected(true);\r\n        }, 1000);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const passwordStrength = (pwd) => {\r\n    // Length Check\r\n    if (pwd.length >= 8 && passwordSt.length === false) {\r\n      setpasswordSt((prevState) => ({\r\n        ...prevState,\r\n        length: true,\r\n      }));\r\n    }\r\n    if (pwd.length < 8 && passwordSt.length === true) {\r\n      setpasswordSt((prevState) => ({\r\n        ...prevState,\r\n        length: false,\r\n      }));\r\n    }\r\n\r\n    // Match Check\r\n    if (password === passwordCheck && passwordSt.match === false) {\r\n      setpasswordSt((prevState) => ({\r\n        ...prevState,\r\n        match: true,\r\n      }));\r\n    }\r\n    if (password !== passwordCheck && passwordSt.match === true) {\r\n      setpasswordSt((prevState) => ({\r\n        ...prevState,\r\n        match: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const checkForSubmit = () => {\r\n    let checkList = Object.values(passwordSt);\r\n    let checkBool = checkList.every(Boolean);\r\n    if (checkBool) {\r\n      return true;\r\n    } else return false;\r\n  };\r\n\r\n  const handleSecureClick = (e) => {\r\n    e.preventDefault();\r\n    if (checkForSubmit()) {\r\n      enablePassword(password);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    passwordStrength(password);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>Protect with Password</h2>\r\n      <h5>\r\n        The contents of this note will be password protected. No account\r\n        required.\r\n      </h5>\r\n      <p className=\"message\">{message}</p>\r\n      <form className=\"enable-password\">\r\n        <label>Password</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        ></input>\r\n        <p>\r\n          <i\r\n            style={{ color: passwordSt.length ? \"#06d6a0\" : \"#ef476f\" }}\r\n            className={\r\n              passwordSt.length ? \"lni lni-checkmark-circle\" : \"lni lni-warning\"\r\n            }\r\n          ></i>\r\n          At Least 8 Characters\r\n        </p>\r\n        <label>Retype Password</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"passwordCheck\"\r\n          value={passwordCheck}\r\n          onChange={(e) => {\r\n            setPasswordCheck(e.target.value);\r\n          }}\r\n        ></input>\r\n        <p>\r\n          <i\r\n            style={{\r\n              color:\r\n                passwordSt.match && passwordSt.length ? \"#06d6a0\" : \"#ef476f\",\r\n            }}\r\n            className={\r\n              passwordSt.length ? \"lni lni-checkmark-circle\" : \"lni lni-warning\"\r\n            }\r\n          ></i>\r\n          Passwords Must Match\r\n        </p>\r\n        <button\r\n          onClick={(e) => {\r\n            handleSecureClick(e);\r\n          }}\r\n        >\r\n          Secure\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnablePassword;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStateNote } from \"../../reducers/noteReducer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst DisablePassword = ({ setShowSettingsModal, setNoteProtected }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const note = useSelector((state) => state.note);\r\n\r\n  // Disables password, shows message and triggers modal close.\r\n  const disablePassword = async () => {\r\n    try {\r\n      let returnedNote = await axios.post(\"/api/note/password/disable\", {\r\n        password: password,\r\n        identifier: note.identifier,\r\n      });\r\n\r\n      if (returnedNote) {\r\n        dispatch(setStateNote(returnedNote.data));\r\n        setPassword(\"\");\r\n        setMessage(\"Password Disabled\");\r\n        setTimeout(() => {\r\n          setShowSettingsModal(false);\r\n          setNoteProtected(false);\r\n        }, 1000);\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.response.data.error);\r\n      setPassword(\"\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    disablePassword();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"message\">{message}</p>\r\n      <form className=\"disable-password\">\r\n        <label>Enter Current Password</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        ></input>\r\n        <button\r\n          onClick={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          Disable Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisablePassword;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStateNote } from \"../../reducers/noteReducer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ChangePassword = () => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [newPasswordCheck, setNewPasswordCheck] = useState(\"\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const [passwordSt, setpasswordSt] = useState({\r\n    length: false,\r\n    match: false,\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const note = useSelector((state) => state.note);\r\n\r\n  const changePassword = async () => {\r\n    let updatedNote = {\r\n      newPassword: newPassword,\r\n      currentPassword: currentPassword,\r\n      identifier: note.identifier,\r\n    };\r\n\r\n    try {\r\n      let returnedNote = await axios.post(\r\n        \"/api/note/password/change\",\r\n        updatedNote\r\n      );\r\n      if (returnedNote) {\r\n        setMessage(\"Password Changed\");\r\n        dispatch(setStateNote(returnedNote.data));\r\n        setNewPassword(\"\");\r\n        setNewPasswordCheck(\"\");\r\n        setCurrentPassword(\"\");\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.response.data.error);\r\n      setCurrentPassword(\"\");\r\n    }\r\n  };\r\n\r\n  const passwordStrength = (pwd) => {\r\n    // Length Check\r\n    if (pwd.length >= 8 && passwordSt.length === false) {\r\n      setpasswordSt((prevState) => ({\r\n        ...prevState,\r\n        length: true,\r\n      }));\r\n    }\r\n    if (pwd.length < 8 && passwordSt.length === true) {\r\n      setpasswordSt((prevState) => ({\r\n        ...prevState,\r\n        length: false,\r\n      }));\r\n    }\r\n\r\n    // Match Check\r\n    if (newPassword === newPasswordCheck && passwordSt.match === false) {\r\n      setpasswordSt((prevState) => ({\r\n        ...prevState,\r\n        match: true,\r\n      }));\r\n    }\r\n    if (newPassword !== newPasswordCheck && passwordSt.match === true) {\r\n      setpasswordSt((prevState) => ({\r\n        ...prevState,\r\n        match: false,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const checkForSubmit = () => {\r\n    let checkList = Object.values(passwordSt);\r\n    let checkBool = checkList.every(Boolean);\r\n    if (checkBool) {\r\n      return true;\r\n    } else return false;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (checkForSubmit()) {\r\n      changePassword();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    passwordStrength(newPassword);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"message\">{message}</p>\r\n      <form className=\"change-password\">\r\n        <label>Create New Password</label>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"password\"\r\n            value={newPassword}\r\n            onChange={(e) => {\r\n              setNewPassword(e.target.value);\r\n            }}\r\n          ></input>\r\n          <p>\r\n            <i\r\n              style={{ color: passwordSt.length ? \"#06d6a0\" : \"#ef476f\" }}\r\n              className={\r\n                passwordSt.length\r\n                  ? \"lni lni-checkmark-circle\"\r\n                  : \"lni lni-warning\"\r\n              }\r\n            ></i>\r\n            At Least 8 Characters\r\n          </p>\r\n          <label>Retype New Password</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"passwordCheck\"\r\n            value={newPasswordCheck}\r\n            onChange={(e) => {\r\n              setNewPasswordCheck(e.target.value);\r\n            }}\r\n          ></input>\r\n          <p>\r\n            <i\r\n              style={{\r\n                color:\r\n                  passwordSt.match && passwordSt.length ? \"#06d6a0\" : \"#ef476f\",\r\n              }}\r\n              className={\r\n                passwordSt.length\r\n                  ? \"lni lni-checkmark-circle\"\r\n                  : \"lni lni-warning\"\r\n              }\r\n            ></i>\r\n            Passwords Must Match\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <label>Current Password</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"currentPassword\"\r\n            value={currentPassword}\r\n            onChange={(e) => {\r\n              setCurrentPassword(e.target.value);\r\n            }}\r\n          ></input>\r\n          <button\r\n            onClick={(e) => {\r\n              handleSubmit(e);\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport EnablePassword from \"./EnablePassword\";\r\nimport DisablePassword from \"./DisablePassword\";\r\n\r\nimport ChangePassword from \"./ChangePassword\";\r\n\r\nimport \"./Settings.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SettingsModal = ({ setShowSettingsModal, showSettingsModal }) => {\r\n  const [showChange, setShowChange] = useState(true);\r\n  const [noteProtected, setNoteProtected] = useState(false);\r\n\r\n  const note = useSelector((state) => state.note);\r\n\r\n  useEffect(() => {\r\n    setNoteProtected(note.protected);\r\n  }, []);\r\n\r\n  const offClick = ({ target }) => {\r\n    if (showSettingsModal === true && target.className === \"modal-background\")\r\n      setShowSettingsModal(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      class=\"modal-background\"\r\n      style={{ display: showSettingsModal ? \"block\" : \"none\" }}\r\n      onClick={(e) => offClick(e)}\r\n    >\r\n      <div className=\"modal-settings\">\r\n        <div>\r\n          {noteProtected ? (\r\n            <div>\r\n              <div className=\"selection-settings\">\r\n                <button\r\n                  style={{ backgroundColor: showChange && \"#166079\" }}\r\n                  name=\"change\"\r\n                  onClick={(e) => setShowChange(true)}\r\n                >\r\n                  Change Password\r\n                </button>\r\n                <button\r\n                  style={{ backgroundColor: !showChange && \"#166079\" }}\r\n                  name=\"disable\"\r\n                  onClick={(e) => setShowChange(false)}\r\n                >\r\n                  Disable Password\r\n                </button>\r\n              </div>\r\n              <div>\r\n                {showChange ? (\r\n                  <ChangePassword setNoteProtected={setNoteProtected} />\r\n                ) : (\r\n                  <DisablePassword\r\n                    setShowSettingsModal={setShowSettingsModal}\r\n                    setNoteProtected={setNoteProtected}\r\n                  />\r\n                )}\r\n              </div>{\" \"}\r\n            </div>\r\n          ) : (\r\n            <EnablePassword\r\n              setShowSettingsModal={setShowSettingsModal}\r\n              setNoteProtected={setNoteProtected}\r\n            />\r\n          )}\r\n        </div>\r\n        <button\r\n          className=\"cancel\"\r\n          onClick={() => {\r\n            setShowSettingsModal(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","const INLINE_STYLES = [\r\n  { icon: \"lni lni-bold\", style: \"BOLD\" },\r\n  { icon: \"lni lni-italic\", style: \"ITALIC\" },\r\n  { icon: \"lni lni-underline\", style: \"UNDERLINE\" },\r\n  //   { label: \"Monospace\", style: \"CODE\" },\r\n];\r\n\r\nconst BLOCK_TYPES = [\r\n  { label: \"H1\", style: \"header-one\" },\r\n  { label: \"H2\", style: \"header-two\" },\r\n  { label: \"H3\", style: \"header-three\" },\r\n  { label: \"H4\", style: \"header-four\" },\r\n  { label: \"H5\", style: \"header-five\" },\r\n  { label: \"H6\", style: \"header-six\" },\r\n  { label: \"UL\", style: \"unordered-list-item\" },\r\n  { label: \"OL\", style: \"ordered-list-item\" },\r\n  { label: \"Blockquote\", style: \"blockquote\" },\r\n  { label: \"Code Block\", style: \"code-block\" },\r\n];\r\n\r\nexport default { INLINE_STYLES, BLOCK_TYPES };\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DeleteMessage from \"./DeleteMessage\";\r\nimport SettingsModal from \"../Settings/SettingsModal\";\r\nimport {\r\n  Editor,\r\n  EditorState,\r\n  RichUtils,\r\n  convertToRaw,\r\n  convertFromRaw,\r\n} from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\nimport buttonTypes from \"../../Styling\";\r\nimport \"./Note.scss\";\r\n\r\nconst Note = () => {\r\n  const [status, setStatus] = useState(\"Saved \");\r\n  const [saving, setSaving] = useState(false);\r\n  const [time, setTime] = useState(1500);\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [confirmDelete, setConfirmDelete] = useState(false);\r\n  const [deleteSuccess, setDeleteSucess] = useState(false);\r\n\r\n  const [showSettingsModal, setShowSettingsModal] = useState(false);\r\n\r\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n  const note = useSelector((state) => state.note);\r\n  const editorRef = useRef(null);\r\n\r\n  const handleKeyCommand = (command, editorState) => {\r\n    const newState = RichUtils.handleKeyCommand(editorState, command);\r\n    if (newState) {\r\n      setEditorState(newState);\r\n      return \"handled\";\r\n    }\r\n\r\n    return \"not-handled\";\r\n  };\r\n\r\n  const handleSyleButtonCommand = (event, label) => {\r\n    event.preventDefault();\r\n    const nextState = RichUtils.toggleInlineStyle(editorState, label);\r\n    setEditorState(nextState);\r\n  };\r\n\r\n  const handleBlockButtonCommand = (event, style) => {\r\n    event.preventDefault();\r\n    const nextState = RichUtils.toggleBlockType(editorState, style);\r\n    setEditorState(nextState);\r\n  };\r\n\r\n  const BlockButtons = ({ label, style }) => {\r\n    return (\r\n      <span\r\n        className=\"style-buttons\"\r\n        onMouseDown={(e) => handleBlockButtonCommand(e, style)}\r\n      >\r\n        {label}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const StyleButtons = ({ style, icon }) => {\r\n    const inlineStyle = editorState.getCurrentInlineStyle();\r\n    const styleSelected = inlineStyle.has(style);\r\n    return (\r\n      <span\r\n        className={\"style-buttons \" + (styleSelected && \"selected-button\")}\r\n        onMouseDown={(e) => handleSyleButtonCommand(e, style)}\r\n      >\r\n        <i className={icon}></i>\r\n      </span>\r\n    );\r\n  };\r\n\r\n  // Checks for note in redux.\r\n  // If blank note is found, it is created.\r\n  //  Otherwies, notes with existing content are rendered.\r\n\r\n  useEffect(() => {\r\n    if (note) {\r\n      if (note.note !== \"\") {\r\n        const content = convertFromRaw(JSON.parse(note.note));\r\n        setEditorState(EditorState.createWithContent(content));\r\n        editorRef.current.focus();\r\n      } else {\r\n        setEditorState(EditorState.createEmpty());\r\n        editorRef.current.focus();\r\n      }\r\n    }\r\n  }, [note]);\r\n\r\n  //  Handles the timing of auto-save\r\n  useEffect(() => {\r\n    if (saving) {\r\n      const timer = setInterval(() => {\r\n        setTime((prevTime) => prevTime - 100);\r\n      }, 100);\r\n\r\n      if (time === 0) {\r\n        setSaving(false);\r\n        setStatus(\"Saved \");\r\n      }\r\n\r\n      return () => {\r\n        clearInterval(timer);\r\n      };\r\n    }\r\n  });\r\n\r\n  // Handles saving process\r\n  const triggerSave = async () => {\r\n    if (!deleteSuccess) {\r\n      try {\r\n        await saveNote();\r\n        if (!saving) {\r\n          setStatus(\"Saving...\");\r\n          setSaving(true);\r\n        }\r\n        setTime(1500);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Key is pressed. Save is Made.\r\n\r\n  const saveNote = async () => {\r\n    const contentState = editorState.getCurrentContent();\r\n    note.note = convertToRaw(contentState);\r\n    const rawDraftContentState = JSON.stringify(\r\n      convertToRaw(editorState.getCurrentContent())\r\n    );\r\n    note.note = rawDraftContentState;\r\n\r\n    let savedNote = await axios.post(\"/api/note/save\", note);\r\n    if (savedNote) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const toggleStyleButtons = () => {\r\n    setShowButtons(!showButtons);\r\n  };\r\n\r\n  const trackKeyDown = (e) => {\r\n    triggerSave();\r\n  };\r\n\r\n  const deleteNote = async (e) => {\r\n    try {\r\n      let result = await axios.post(\"/api/note/delete\", {\r\n        _id: note._id,\r\n      });\r\n\r\n      if (result) {\r\n        setDeleteSucess(true);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const DeleteConfirmComponent = () => {\r\n    return (\r\n      <div className=\"delete\">\r\n        <button disabled={deleteSuccess} onClick={deleteNote}>\r\n          Delete Note\r\n        </button>\r\n        <button\r\n          disabled={deleteSuccess}\r\n          onClick={() => setConfirmDelete(false)}\r\n        >\r\n          Cancel Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"dashboard\">\r\n        <div className=\"info\">\r\n          {!confirmDelete ? (\r\n            <div>\r\n              <span style={{ color: saving ? \"#ef476f\" : \"#118ab2\" }}>\r\n                {status}\r\n                {!saving && <i class=\"lni lni-checkmark-circle\"></i>}\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {!confirmDelete ? (\r\n            <div>\r\n              <button onClick={() => setShowSettingsModal(!showSettingsModal)}>\r\n                <i className=\"lni lni-lock\"></i> Manage Security\r\n              </button>\r\n              <button onClick={() => setConfirmDelete(true)}>\r\n                <i className=\"lni lni-trash-can\"></i>\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <DeleteConfirmComponent />\r\n          )}\r\n        </div>\r\n        <div className={showButtons ? \"buttons-display \" : \"truncate\"}>\r\n          <span className=\"style-buttons\" onClick={triggerSave}>\r\n            <i className=\"lni lni-save\"></i>\r\n          </span>\r\n          {buttonTypes.INLINE_STYLES.map(({ style, icon }) => (\r\n            <StyleButtons style={style} icon={icon} />\r\n          ))}\r\n          {buttonTypes.BLOCK_TYPES.map(({ style, label }) => (\r\n            <BlockButtons style={style} label={label} />\r\n          ))}\r\n        </div>\r\n        <button className=\"show-more\" onClick={toggleStyleButtons}>\r\n          <i\r\n            className={\r\n              showButtons ? \"lni lni-chevron-up\" : \"lni lni-chevron-down\"\r\n            }\r\n          ></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"main\" onKeyDown={(e) => trackKeyDown(e)}>\r\n        {!deleteSuccess ? (\r\n          <Editor\r\n            ref={editorRef}\r\n            editorState={editorState}\r\n            onChange={setEditorState}\r\n            handleKeyCommand={handleKeyCommand}\r\n          />\r\n        ) : (\r\n          <DeleteMessage />\r\n        )}\r\n      </div>\r\n      <SettingsModal\r\n        showSettingsModal={showSettingsModal}\r\n        setShowSettingsModal={setShowSettingsModal}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PasswordEntry.scss\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStateNote } from \"../../reducers/noteReducer\";\r\n\r\n//  Password entry modal if a password is set\r\nconst PasswordEntry = ({ setNeedsAuth }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let input = location.pathname.split(\"/\").pop();\r\n\r\n    try {\r\n      let result = await axios.post(`/api/note/fetch_secure`, {\r\n        identifier: input,\r\n        password: password,\r\n      });\r\n      if (result) {\r\n        dispatch(setStateNote(result.data));\r\n        setNeedsAuth(false);\r\n      }\r\n    } catch (error) {\r\n      setMessage(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  const createNew = () => {\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-password\">\r\n      <h2>Secured Note</h2>\r\n      <h5>This note is password protected.</h5>\r\n      <p className=\"error-message\">{message}</p>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        ></input>\r\n        <button\r\n          onClick={(e) => {\r\n            handleSubmit(e);\r\n          }}\r\n        >\r\n          Enter\r\n        </button>\r\n      </form>\r\n      <button className=\"cancel\" onClick={createNew}>\r\n        Create New Note\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordEntry;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setStateNote } from \"../reducers/noteReducer\";\r\nimport Note from \"./Note/Note\";\r\nimport PasswordEntry from \"./PasswordEntry/PasswordEntry\";\r\n\r\nconst Landing = () => {\r\n  const [needsAuth, setNeedsAuth] = useState(false);\r\n  const [load, setLoad] = useState(false);\r\n  const [deleted, setDeleted] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const makeIdentifier = (length) => {\r\n    let result = [];\r\n    let characters =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    let charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n      result.push(\r\n        characters.charAt(Math.floor(Math.random() * charactersLength))\r\n      );\r\n    }\r\n    return result.join(\"\");\r\n  };\r\n\r\n  const checkURLForUserInput = () => {\r\n    // Checks if user has inputed a full url. If so, it's validated. If not, a new note is craeted.\r\n    let input = location.pathname.split(\"/\").pop();\r\n    if (input) {\r\n      if (input === \"delete\") {\r\n      } else {\r\n        loadExisitngNote(input);\r\n      }\r\n    } else {\r\n      makeNewNote();\r\n    }\r\n  };\r\n\r\n  const fetchNote = async (identifier) => {\r\n    // Checks and possibly gets note saved in Mongo\r\n    try {\r\n      let result = await axios.get(`/api/note/${identifier}`);\r\n      return result.data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  const loadExisitngNote = async (identifier) => {\r\n    // Attempts to load user's input. If validation fails, a new note is created.\r\n    try {\r\n      let result = await axios.get(`/api/note/${identifier}`);\r\n      if (result.data === \"none\") {\r\n        makeNewNote();\r\n      } else {\r\n        dispatch(setStateNote(result.data));\r\n        setLoad(true);\r\n        history.push(`/${identifier}`);\r\n      }\r\n    } catch (error) {\r\n      if (error.response.status) {\r\n        if (error.response.status === 403) {\r\n          setNeedsAuth(true);\r\n          setLoad(true);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const makeNewNote = async () => {\r\n    // Makes a new note with random identifier. If random/new identifier is already in use, process\r\n    // is repeated.\r\n    try {\r\n      let randomIdentifier = makeIdentifier(10);\r\n\r\n      let result = await fetchNote(randomIdentifier);\r\n\r\n      if (result !== \"none\") {\r\n        makeNewNote();\r\n      } else {\r\n        let result = await axios.post(`/api/note`, {\r\n          identifier: randomIdentifier,\r\n        });\r\n        dispatch(setStateNote(result.data));\r\n        setLoad(true);\r\n        history.push(`/${randomIdentifier}`);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkURLForUserInput();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {load && (\r\n        <div>\r\n          {needsAuth ? (\r\n            <PasswordEntry needsAuth={needsAuth} setNeedsAuth={setNeedsAuth} />\r\n          ) : (\r\n            <Note />\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import Landing from \"./Components/Landing\";\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Switch>\r\n        <Route path=\"/\">\r\n          <Landing />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport noteReducer from \"./reducers/noteReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  note: noteReducer,\r\n});\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}